@layout AdminLayout
@page "/admin/new"
@using LearnOnline.Models
@using LearnOnline.Models.Entities
@inject INewService newService
@inject HttpClient _httpClient
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService session
<h3>NewAdmin</h3>
<button class="btn btn-primary float-end" @onclick="CreatePart">
    <i class="oi oi-plus"></i> Create new
</button>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Image</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in News)
        {
            var x = @item.Id;
            <tr>
                <td>@item.Title</td>
                <td>
                    <img src="@item.Image" style="height:200px;width:auto" alt="">
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => EditProduct(x))">
                        <i class="oi oi-pencil"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@code {
    private static List<New> Response = new List<New>();
    private static List<NewDTo> News = new List<NewDTo>();
    string change(byte[] a)
    {
        var format = "image/png";
        return $"data:{format};base64,{Convert.ToBase64String(a)}";
    }
    protected override async Task OnInitializedAsync()
    {
        //check login
        var user = await session.GetItemAsync<string>("SessionUser");
        if (user != "admin@gmail.com")
        {
            NavigationManager.NavigateTo("login");
        }
        //check login
        var user = await session.GetItemAsync<string>("SessionUser");
        if (user != "admin@gmail.com")
        {
            NavigationManager.NavigateTo("login");
        }
        News = new List<NewDTo>();
        //var response = await _httpClient.GetFromJsonAsync<New>($"api/New/id?id={Id}");
        var response = await _httpClient.GetFromJsonAsync<List<New>>($"api/New/topic?topic={1}");
        Response = response;
        var format = "image/png";
        foreach (var item in Response)
        {
            var newImage = new NewDTo();
            newImage.Id = item.Id;
            newImage.Title = item.Title;
            //newImage.Description = item.Description;
            if (item.Image != null)
            {
                newImage.Image = $"data:{format};base64,{Convert.ToBase64String(item.Image)}";
            }
            else
            {
                newImage.Image = "";
            }

            News.Add(newImage);
        }
        //learning
        //   News = News.Where(x => x.Topic == "2").ToList();
    }
    void CreatePart()
    {
        NavigationManager.NavigateTo("admin/newCreate");
    }
    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/newEdit/{productId}");
    }
}