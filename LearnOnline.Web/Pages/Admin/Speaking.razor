@layout AdminLayout
@page "/admin/speaking"
@using LearnOnline.Models
@using LearnOnline.Models.Entities
@inject IPartService partService
@inject HttpClient _httpClient
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService session
<h3>Reading</h3>
<button class="btn btn-primary float-end" @onclick="CreatePart">
    <i class="oi oi-plus"></i> Create Question
</button>
<table class="table">
    <thead>
        <tr>
            <th>STT</th>
            <th>Title</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 1; i <= Parts.Count; i++)
        {
            var x = @Parts[i - 1].Id;
            var cateogryId = @Parts[i - 1].CategoryId;
            var category = categories.FirstOrDefault(s => s.Id == cateogryId);
            <tr>
                <td>@i</td>
                <td>@Parts[i - 1].Title</td>
                <td>
                    @category?.CategoryName
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => EditProduct(x))">
                        <i class="oi oi-pencil"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@code {
    private static List<Part> Parts = new List<Part>();
    private static List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        //check login
        var user = await session.GetItemAsync<string>("SessionUser");
        if (user != "admin@gmail.com")
        {
            NavigationManager.NavigateTo("login");
        }

        var response = await partService.GetParts();
        // Parts = partService.Parts;
        //var response = await _httpClient.GetFromJsonAsync<ServiceResponse<List<Part>>>("api/Part");
        Parts = response.Data;
        //get list speaking
        Parts = Parts.Where(x => x.SkillId == 3).ToList();
        var listCategory = await _httpClient.GetFromJsonAsync<List<Category>>("api/Category");
        categories = listCategory;
    }
    void CreatePart()
    {
        NavigationManager.NavigateTo("admin/CreateSpeaking");
    }
    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/EditSpeaking/{productId}");
    }
}

