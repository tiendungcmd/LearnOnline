@page "/new/{id:int}"

@using System.Linq
@using LearnOnline.Models
@inject INewService NewService
@inject HttpClient _client

<div class="container ">
    <div class="col-12 new">
        <div class="name"> <h3> <b>@newDto?.Title</b></h3></div>
    </div>

    @if (iamgeDataUrls != null && iamgeDataUrls.Count > 0)
    {
        <div>
            @foreach (var img in iamgeDataUrls)
            {
                <img src="@img"style="height:500px;width:500px;margin-left: 25%;" alt="" />
            }
        </div>
    }

    <div class="name">@newDto?.Description</div>
</div>
<style>
    .new {
        text-align: center;
    }
</style>
@code {
    [Parameter]
    public int Id { get; set; }

    List<string> iamgeDataUrls = new List<string>();
    List<Image> imageList = new List<Image>();
    Image imageRequest = new Image();
    private static NewDTo newDto = new NewDTo();
    private static List<Category> categories = new List<Category>();
    private static List<New> Response = new List<New>();
    protected override async Task OnParametersSetAsync()
    {
        //var result = await NewService.GetNewById(Id);
        //newItem = result.Data;
        //var x = 1;
        var newImage = new NewDTo();
        var format = "image/png";
        var response = await _client.GetFromJsonAsync<New>($"api/New/id?id={Id}");
        newDto.Id = response.Id;
        newDto.Title = response.Title;
        newDto.Description = response.Description;

        if (response.Image != null)
        {
            newImage.Image = $"data:{format};base64,{Convert.ToBase64String(response.Image)}";
            iamgeDataUrls.Add(newImage.Image);
        }
    }
}